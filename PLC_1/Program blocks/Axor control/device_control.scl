FUNCTION_BLOCK "device_control"
TITLE = axor
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Frj
VERSION : 0.1
   VAR_INPUT 
      M_in { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : "M_in";
      startMotor { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool;
   END_VAR

   VAR_OUTPUT 
      M_out { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : "M_out";
   END_VAR

   VAR 
      step { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Int;
   END_VAR

   VAR CONSTANT 
      start : Int := 0;
      not_ready_to_switch_on : Int := 1;
      switch_on_disable : Int := 2;
      ready_to_switch_on : Int := 3;
      switch_on : Int := 4;
      operation_enable : Int := 5;
      quick_stop_active : Int := 6;
      fault : Int := 7;
   END_VAR


BEGIN
	
	//stop case
	IF #M_in.statusword.bit_3
	THEN
	    #step := #fault;
	END_IF;
	
	
	REGION Stati drive   
	    CASE #step OF
	        #start:  // Statement section case 1
	            IF #startMotor
	            THEN
	                #step := #not_ready_to_switch_on;
	            END_IF;
	            
	        #not_ready_to_switch_on:  // Statement section case 2 to 4
	            IF NOT #M_in.statusword.bit_3
	            THEN
	                #step := #switch_on_disable;
	            END_IF;
	            
	        #switch_on_disable:  // Statement section case 1
	            IF #M_in.statusword.bit_6
	            THEN
	                #step := #ready_to_switch_on;
	            END_IF;
	            
	        #ready_to_switch_on:  // Statement section case 2 to 4
	            IF #M_in.statusword.bit_0 AND (#M_in.curr_mode_operation = #M_out.set_mode_op)
	            THEN
	                #step := #switch_on;
	            END_IF;
	            
	        #switch_on:  // Statement section case 1
	            IF #M_in.statusword.bit_1
	            THEN
	                #step := #operation_enable;
	            END_IF;
	            
	        #operation_enable:  // Statement section case 2 to 4
	            IF #M_in.statusword.bit_3
	            THEN
	                #step := #fault;
	            END_IF;
	            IF #M_in.statusword.bit_5 = 0
	            THEN
	                #step := #quick_stop_active;
	            END_IF;
	            
	        #quick_stop_active:  // Statement section case 1
	            IF #M_in.statusword.bit_6
	            THEN
	                #step := #switch_on_disable;
	            END_IF;
	            
	        #fault:  // Statement section case 2 to 4
	            IF NOT #M_in.statusword.bit_3
	            THEN
	                #step := #start;
	            END_IF;
	    END_CASE;
	    
	END_REGION
	
	REGION Comandi drive
	    //swtich on
	    #M_out.controlword.bit_0 := #step >= #switch_on;
	    //enable voltage
	    #M_out.controlword.bit_1 := #step >= #ready_to_switch_on;
	    //quick stop
	    #M_out.controlword.bit_2 := NOT #startMotor;
	    //opertion enable
	    #M_out.controlword.bit_3 := #step >= #operation_enable;
	    
	    
	END_REGION
	
	
	
	
	
	
END_FUNCTION_BLOCK

